#N canvas 294 122 422 326 10;
#N canvas 0 22 450 300 (subpatch) 0;
#X array sound1 62079 float 2;
#X coords 0 1 62079 -1 100 70 1;
#X restore 19 101 graph;
#X obj 27 278 dac~;
#N canvas 337 283 502 352 messages 0;
#X obj 22 122 s stutter.messages;
#X obj 22 64 unpack f f;
#X msg 105 90 max_echo \$1;
#X msg 22 90 min_echo \$1;
#X msg 22 37 2 3;
#X msg 63 39 5 20;
#X text 20 15 extrema for echo count;
#X text 23 148 extrema for loop duration;
#N canvas 586 175 450 300 pattern-storage 0;
#X obj 29 46 s stutter.messages;
#X msg 29 13 show_loop;
#X text 118 15 print current loop;
#X text 169 83 setloop (start sample \, sample duration);
#X obj 26 113 s stutter.messages;
#X msg 26 79 set_loop 6951 3000;
#X obj 30 187 s stutter.messages;
#X msg 30 153 store_loop 1;
#X obj 25 249 s stutter.messages;
#X msg 25 215 recall_loop 1;
#X text 128 213 recall loop 1;
#X text 127 154 store current loop in location 1;
#X text 25 277 you can store up to 1024 different loops in locations
0-1023;
#X connect 1 0 0 0;
#X connect 5 0 4 0;
#X connect 7 0 6 0;
#X connect 9 0 8 0;
#X restore 313 149 pd pattern-storage;
#X obj 43 257 s stutter.messages;
#X obj 43 199 unpack f f;
#X msg 45 172 90 40;
#X msg 108 172 1000 200;
#X msg 43 226 max_looptime \$1;
#X msg 172 226 min_looptime \$1;
#X text 176 173 order: max \, min;
#X obj 320 112 s stutter.messages;
#X msg 320 55 lockme \$1;
#X obj 320 27 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#N canvas 564 177 450 300 refinements 0;
#X obj 43 257 s stutter.messages;
#X msg 93 232 taper 5;
#X msg 43 200 taper 50;
#X text 111 199 softer envelope;
#X text 153 235 harder envelope;
#X text 44 183 taper duration in ms.;
#X obj 30 101 s stutter.messages;
#X msg 30 75 randomize_dur \$1;
#X floatatom 30 51 5 0 0 0 - - -, f 5;
#X obj 33 26 hsl 128 15 0 0.2 0 0 empty empty empty -2 -8 0 10 -129795
-1 -1 0 1;
#X obj 193 104 s stutter.messages;
#X floatatom 193 54 5 0 0 0 - - -, f 5;
#X obj 196 29 hsl 128 15 0 0.2 0 0 empty empty empty -2 -8 0 10 -129795
-1 -1 0 1;
#X msg 193 77 randomize_start \$1;
#X text 25 7 random loop deviations;
#X connect 1 0 0 0;
#X connect 2 0 0 0;
#X connect 7 0 6 0;
#X connect 8 0 7 0;
#X connect 9 0 8 0;
#X connect 11 0 13 0;
#X connect 12 0 11 0;
#X connect 13 0 10 0;
#X restore 313 179 pd refinements;
#X msg 328 76 new_loop;
#X text 340 29 lock current loop;
#X text 392 76 force new;
#X connect 1 0 3 0;
#X connect 1 1 2 0;
#X connect 2 0 0 0;
#X connect 3 0 0 0;
#X connect 4 0 1 0;
#X connect 5 0 1 0;
#X connect 10 0 13 0;
#X connect 10 1 14 0;
#X connect 11 0 10 0;
#X connect 12 0 10 0;
#X connect 13 0 9 0;
#X connect 14 0 9 0;
#X connect 17 0 16 0;
#X connect 18 0 17 0;
#X connect 20 0 16 0;
#X restore 131 126 pd messages;
#X text 126 100 use a fairly long and varied sound here;
#N canvas 9 465 466 316 load-soundfile 0;
#X obj 31 177 soundfiler;
#X msg 30 103 bang;
#X obj 30 129 openpanel;
#X msg 30 151 read -resize \$1 sound1;
#X obj 11 57 loadbang;
#X obj 105 40 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X msg 10 82 read -resize sound/voice.wav sound1;
#X connect 1 0 2 0;
#X connect 2 0 3 0;
#X connect 3 0 0 0;
#X connect 4 0 6 0;
#X connect 5 0 6 0;
#X connect 6 0 0 0;
#X restore 129 82 pd load-soundfile;
#X obj 27 253 *~ 0.1;
#X obj 88 252 hsl 100 14 0 0.5 0 0 stutter.demo.gain empty empty -2
-8 0 10 -174016 -1 -1 0 1;
#X obj 5 10 cnv 15 160 25 empty empty LyonPotpourri 20 12 1 18 -260097
-204786 0;
#X text 218 127 <- open this for more info;
#X text 194 254 set master gain;
#X floatatom 66 232 5 0 0 0 - stutter.demo.gain -, f 5;
#X obj 27 209 stutter~ sound1 500 1000 30;
#X obj 27 184 r stutter.messages;
#X text 6 42 stutter~ - stutter-play an array;
#X connect 5 0 1 0;
#X connect 5 0 1 1;
#X connect 10 0 5 1;
#X connect 11 0 5 0;
#X connect 12 0 11 0;
